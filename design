RubyReportable.define :test do
  source do
    as :client_application

    logic do
      ClientApplication.joins(:assigned_worker, :client)
    end

    filter(:unless => proc { meta[:current_user].roles.include?(:all) }) do
      source.where('client_applications.assigned_worker_id' => meta[:current_user].id)
    end
  end

  output('CLTC #')  { client_application.client.cltc_number }
  output('Program') { client_application.program.to_s }
  output('Worker')  { client_application.assigned_worker.to_s }


  filter('Program') do
    require
    key :program
    input(:select) { Program.all.map(&:to_s) }

    logic do
      client_application.program.to_s == input
    end
  end
end




RubyReportable.reports[:test].run(:meta => {:current_user => nil}, :input => {:program => 'Community Choices'})
